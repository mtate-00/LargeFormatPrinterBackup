#####################################################################
#   Collection of all Macros used by Large Format Printer
#####################################################################

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_bed_heater = target_bed + 5 %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_extruder_upper = target_extruder - 25 %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=check_time VALUE=500 # Slow down checks to reduce load on cpu

  # Home the printer, set absolute positioning
  SET_HEATER_TEMPERATURE HEATER=bed1 TARGET={target_bed_heater+5}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target_bed_heater+5}

  SET_HEATER_TEMPERATURE HEATER=extruder_lower TARGET={150}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={150}
  
  G28                                                                          # Full home (XYZ)
  G90                                                                          # Absolute position

  ##  Step 1 of 2 for bed mesh
  BED_MESH_CLEAR                                                               # Clear old saved bed mesh (if any)

  SET_DISPLAY_TEXT MSG="Bed Heater: {target_bed_heater+5}c"                    # Display info on display
  G1 X{x_wait} Y{y_wait} Z15 F9000                                             # Go to center of the bed
  SET_HEATER_TEMPERATURE HEATER=bed1 TARGET={target_bed_heater+5}
  M190 S{target_bed_heater+5}                                                  # Set the temp for the bed as 10 deg hotter than required

  SET_DISPLAY_TEXT MSG="Heatsoak Top of Bed: {target_bed}c"                    # Display info on display
  TEMPERATURE_WAIT SENSOR="temperature_sensor bed_temp" MINIMUM={target_bed}   # Waits for top of bed temp

  SET_DISPLAY_TEXT MSG="Bed Heater (cooldown): {target_bed_heater}c"           # Display info on display
  SET_HEATER_TEMPERATURE HEATER=bed1 TARGET={target_bed_heater}                # Sets and waits for bottom of bed temp
  M190 S{target_bed_heater}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                                          # Display info on display
  SET_HEATER_TEMPERATURE HEATER=extruder_lower TARGET={150}                    # Heat hotend(s) to 150c
  M109 S150                                                                    # Heat hotend(s) to 150c

  #  Quad gantry level AKA QGL
  SET_DISPLAY_TEXT MSG="Leveling"                                              # Display info on display
  QUAD_GANTRY_LEVEL                                                            # Level the printer via QGL
  G28                                                                        # Home Z again after QGL

  #  2 of 2 for bed mesh
  SET_DISPLAY_TEXT MSG="Bed mesh"                                              # Display info on display
  BED_MESH_CALIBRATE ADAPTIVE=1                                                # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  # Automatic Z Offset
  SET_DISPLAY_TEXT MSG="Automatic Z Offset"                                    # Display info on display
  CARTOGRAPHER_TOUCH                                                           # Automatic Z Offset calibration by Cartographer

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"                            # Display info on display
  G1 X{x_wait} Y{y_wait} Z15 F9000                                             # Go to center of the bed
  M107                                                                         # Turn off partcooling fan
  SET_HEATER_TEMPERATURE HEATER=extruder_lower TARGET={target_extruder}        # Heat the hotend(s) to set temp
  M109 S{target_extruder_upper}                                                # Heat the hotend(s) to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"                                      # Display info on display
  G0 X{x_wait - 100} Y0 F10000                                                 # Go to starting point
  G0 Z0.4                                                                      # Raise Z to 0.4
  G91                                                                          # Incremental positioning 
  G1 X200 E40 F1000                                                            # Primeline
  G90                                                                          # Absolute position

  SKEW_PROFILE LOAD=calilantern_skew_profile                                   # load skew profile
  SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=check_time VALUE=0.5  # Speed camera check up


[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}
    {% set z_end = [th.position.z + 150, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    SET_SKEW CLEAR=1               ; remove skew compensation
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F6000                ; retract filament
    M106 S255                      ; blast nozzle with cool air
    
    SET_HEATER_TEMPERATURE HEATER=extruder_lower TARGET=0        # Cool the hotend(s) 
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0              # Cool the hotend(s) 
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=65
    SET_HEATER_TEMPERATURE HEATER=bed1 TARGET=65
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2 + 200} Y{th.axis_minimum.y + 2} Z{z_end} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

    SET_HEATER_TEMPERATURE HEATER=extruder_lower TARGET=0        # Cool the hotend(s) 
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0              # Cool the hotend(s) 
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=65
    SET_HEATER_TEMPERATURE HEATER=bed1 TARGET=65


[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
    